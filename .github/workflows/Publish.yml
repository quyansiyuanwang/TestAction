name: CI and Publish

on:
  workflow_dispatch:

permissions:
  contents: write
  id-token: write
  pull-requests: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v3
        with:
          python-version: "3.12"
      
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build
        run: |
          python -m build
      
      - name: Fetch history
        if: ${{ !startsWith(github.ref, 'refs/pull/') }}
        run: |
          git init
          cp $GITHUB_WORKSPACE/temp/.git/config ./.git
          rm -rf $GITHUB_WORKSPACE/temp
          git fetch --filter=tree:0
          git reset --hard origin/$(git branch --show-current) || true
          git checkout ${{ github.ref_name }}
      
      - name: Set tag
        id: set_tag
        run: |
          if [[ "${{ startsWith(github.ref, 'refs/pull/') }}" == "true" ]]; then
            cd temp
          fi
          TAG=$(git describe --tags --match "v*" ${{ github.ref }} 2>/dev/null || git rev-parse --short HEAD)
          echo "tag=$TAG" | tee -a $GITHUB_OUTPUT
      
      - name: Judge pre-release
        id: set_pre
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          if [[ "${{ steps.set_tag.outputs.tag }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "prerelease=false" | tee -a $GITHUB_OUTPUT
          else
            echo "prerelease=true" | tee -a $GITHUB_OUTPUT
          fi
      
      - name: Generate changelog
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          this_tag="${{ steps.set_tag.outputs.tag }}"
          if [[ "${{ steps.set_pre.outputs.prerelease }}" != "false" ]]; then
            last_tag=$(git describe --tags --match "v*" --abbrev=0 --exclude="${this_tag}")
          else
            last_tag=$(git describe --tags --match "v*" --abbrev=0 --exclude="${this_tag}" --exclude="*-*")
          fi
          echo >> CHANGELOG.md
          echo "**Full Changelog**: [$last_tag -> $this_tag](https://github.com/${{ github.repository }}/compare/${last_tag}...${this_tag})" >> CHANGELOG.md
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.set_tag.outputs.tag }}
          body: |
            ${{ steps.set_tag.outputs.tag }}
            ${{ steps.set_pre.outputs.prerelease }}
            ${{ steps.create_release.outputs.upload_url }}
            ${{ steps.create_release.outputs.html_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.run_id }}-${{ github.sha }}
          files: |
            dist/*
            resources/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
